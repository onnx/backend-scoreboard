schedules:
- cron: "0 0 * * *"
  displayName: Midnight update
  branches:
    include:
    - master

# Disable CI trigger (don't run on commits)
trigger: none
# and don't run on Pull Requests
pr: none

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: onnxruntime_stable
    timeoutInMinutes: 90
    steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: ~/.ssh/known_hosts
        sshPublicKey: $(public_deploy_key)
        sshKeySecureFile: deploy_key

    - script: docker build -t scoreboard/onnx -f runtimes/onnx-runtime/stable/Dockerfile .
      displayName: 'Build docker image'

    - script: . setup/git-setup.sh
      displayName: 'Git setup'

    - script: docker run --name onnx-runtime --env-file setup/env.list -v `pwd`/results/onnx-runtime/stable:/root/results scoreboard/onnx || true
      displayName: 'Run docker container'

    - script: . setup/git-deploy-results.sh
      displayName: 'Deploy results'


  - job: onnx_tf_stable
    timeoutInMinutes: 90
    steps:
    - checkout: self
      persistCredentials: true
      clean: true

    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: ~/.ssh/known_hosts
        sshPublicKey: $(public_deploy_key)
        sshKeySecureFile: deploy_key


    - script: docker build -t scoreboard/onnxtf -f runtimes/onnx-tf/stable/Dockerfile .
      displayName: 'Build docker image'

    - script: . setup/git-setup.sh
      displayName: 'Git setup'

    - script: docker run --name onnxtf --env-file setup/env.list -v `pwd`/results/onnx-tf/stable:/root/results scoreboard/onnxtf || true
      displayName: 'Run docker container'

    - script: . setup/git-deploy-results.sh
      displayName: 'Deploy results'


  - job: ngraph_stable
    timeoutInMinutes: 90
    steps:
    - checkout: self
      persistCredentials: true
      clean: true

    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: ~/.ssh/known_hosts
        sshPublicKey: $(public_deploy_key)
        sshKeySecureFile: deploy_key

    - script: docker build -t scoreboard/ngraph -f runtimes/ngraph/stable/Dockerfile .
      displayName: 'Build docker image'

    - script: . setup/git-setup.sh
      displayName: 'Git setup'

    - script: docker run --name ngraph --env-file setup/env.list -v `pwd`/results/ngraph/stable:/root/results scoreboard/ngraph || true
      displayName: 'Run docker container'

    - script: . setup/git-deploy-results.sh
      displayName: 'Deploy results'


  - job: onnxruntime_dev
    timeoutInMinutes: 90
    steps:
    - checkout: self
      persistCredentials: true
      clean: true

    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: ~/.ssh/known_hosts
        sshPublicKey: $(public_deploy_key)
        sshKeySecureFile: deploy_key

    - script: docker build -t scoreboard/onnx -f runtimes/onnx-runtime/development/Dockerfile .
      displayName: 'Build docker image'

    - script: . setup/git-setup.sh
      displayName: 'Git setup'

    - script: docker run --name onnx-runtime --env-file setup/env.list -v `pwd`/results/onnx-runtime/development:/root/results scoreboard/onnx || true
      displayName: 'Run docker container'

    - script: . setup/git-deploy-results.sh
      displayName: 'Deploy results'


  - job: ngraph_development
    timeoutInMinutes: 0
    steps:
    - checkout: self
      persistCredentials: true
      clean: true

    - task: InstallSSHKey@0
      inputs:
        knownHostsEntry: ~/.ssh/known_hosts
        sshPublicKey: $(public_deploy_key)
        sshKeySecureFile: deploy_key

    - script: docker build -t scoreboard/ngraph -f runtimes/ngraph/development/Dockerfile .
      displayName: 'Build docker image'

    - script: . setup/git-setup.sh
      displayName: 'Git setup'

    - script: docker run --name ngraph --env-file setup/env.list -v `pwd`/results/ngraph/development:/root/results scoreboard/ngraph || true
      displayName: 'Run docker container'

    - script: . setup/git-deploy-results.sh
      displayName: 'Deploy results'
